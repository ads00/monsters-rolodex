{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","src","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAaeA,EAVF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACZ,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAQG,GAAlC,0BAA8DC,IAAI,YAC1E,6BAAMJ,EAAQK,OACd,4BAAKL,EAAQM,YCSVC,G,MAZE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OACI,qBAAKP,UAAU,YAAf,SAEQO,EAASC,KACL,SAAAT,GAAO,OAAI,cAAC,EAAD,CAAyBA,QAASA,GAAtBA,EAAQG,WCEpCO,G,MARG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAC9B,OACI,8BACI,uBAAOC,KAAK,SAASF,YAAaA,EAAcV,UAAU,SAASa,SAAUF,QCkC1EG,E,kDAnCb,aAAe,IAAD,8BACV,gBAcJH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbpC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IALL,E,qDASd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAUkB,S,oBAO7C,WAAW,IAAD,EAC0BC,KAAKN,MAA/Bb,EADA,EACAA,SAAUU,EADV,EACUA,YACZU,EAAmBpB,EAASqB,QAAO,SAAA7B,GACvC,OAAOA,EAAQK,KAAKyB,cAAcC,SAASb,EAAYY,kBAGzD,OACE,sBAAK7B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWU,YAAY,kBAAkBC,aAAce,KAAKf,eAC5D,cAAC,EAAD,CAAUJ,SAAWoB,W,GA9BXI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b0f895d8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css';\r\n\r\nconst Card = ({ monster }) => {\r\n    return (\r\n        <div className='card-container'>\r\n            <img src={`https://robohash.org/${monster.id}?set=set2&size=180x180`} alt=\"monster\" />\r\n            <h2>{ monster.name }</h2>\r\n            <p>{ monster.email }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react';\r\nimport Card from '../card/card.component';\r\n\r\nimport './card-list.styles.css';\r\n\r\nconst CardList = ({ monsters }) => {\r\n    return (\r\n        <div className='card-list'>\r\n            {\r\n                monsters.map(\r\n                    monster => <Card key={ monster.id } monster={monster} />\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nimport './search-box.styles.css'\r\n\r\nconst SearchBox = ({ placeholder, handleChange }) => {\r\n    return (\r\n        <div>\r\n            <input type='search' placeholder={placeholder}  className='search' onChange={handleChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import { Component } from 'react';\nimport './App.css';\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor() {\n      super();\n\n      this.state = {\n        monsters: [],\n        searchField: ''\n      }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }));\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  }\n\n  render () {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => {\n      return monster.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n\n    return (\n      <div className='App'>\n        <h1>Monsters Rolodex</h1>\n        <SearchBox placeholder='search monsters' handleChange={this.handleChange} />\n        <CardList monsters={ filteredMonsters } />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}